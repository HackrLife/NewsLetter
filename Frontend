<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Advanced Newsletter App</title>
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
    <style>
        body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
        }
        .container {
            width: 90%;
            max-width: 1200px;
            margin: auto;
            overflow: hidden;
            padding: 20px;
        }
        header {
            background: #35424a;
            color: white;
            padding-top: 30px;
            min-height: 70px;
            border-bottom: #e8491d 3px solid;
        }
        header h1 {
            margin: 0;
            text-align: center;
        }
        nav {
            background: #e8491d;
            color: white;
            padding: 10px 0;
        }
        nav ul {
            padding: 0;
            list-style: none;
            text-align: center;
        }
        nav li {
            display: inline;
            margin: 0 10px;
        }
        nav a {
            color: white;
            text-decoration: none;
        }
        .main-content {
            background: white;
            padding: 20px;
            margin-top: 20px;
            border-radius: 5px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        .newsletter-list {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
        }
        .newsletter-card {
            background: #f9f9f9;
            width: calc(33% - 20px);
            margin-bottom: 20px;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 0 5px rgba(0,0,0,0.1);
        }
        .newsletter-card h3 {
            margin-top: 0;
        }
        form {
            display: flex;
            flex-direction: column;
        }
        form input, form textarea, form select {
            margin-bottom: 10px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        form button {
            background: #35424a;
            color: white;
            border: none;
            padding: 10px;
            cursor: pointer;
            border-radius: 4px;
        }
        form button:hover {
            background: #2a353b;
        }
        #editor {
            height: 300px;
            margin-bottom: 10px;
        }
        .analytics {
            background: #f9f9f9;
            padding: 15px;
            border-radius: 5px;
            margin-top: 20px;
        }
        @media (max-width: 768px) {
            .newsletter-card {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <h1>Advanced Newsletter App</h1>
        </div>
    </header>

    <nav>
        <ul>
            <li><a href="#" onclick="showSection('home')">Home</a></li>
            <li><a href="#" onclick="showSection('create-newsletter')">Create Newsletter</a></li>
            <li><a href="#" onclick="showSection('my-newsletters')">My Newsletters</a></li>
            <li><a href="#" onclick="showSection('subscriptions')">Subscriptions</a></li>
            <li><a href="#" onclick="showSection('login')">Login/Register</a></li>
        </ul>
    </nav>

    <div class="container">
        <div id="home" class="main-content">
            <h2>Welcome to Advanced Newsletter App</h2>
            <p>Discover and subscribe to great newsletters or create your own!</p>
            <div class="newsletter-list" id="featured-newsletters">
                <!-- Featured newsletters will be dynamically added here -->
            </div>
        </div>

        <div id="create-newsletter" class="main-content" style="display:none;">
            <h2>Create a New Newsletter</h2>
            <form id="newsletter-form">
                <input type="text" id="newsletter-name" placeholder="Newsletter Name" required>
                <textarea id="newsletter-description" placeholder="Description" required></textarea>
                <label>
                    <input type="checkbox" id="newsletter-paid"> Paid Newsletter
                </label>
                <input type="number" id="newsletter-price" placeholder="Price (if paid)" style="display:none;">
                <button type="submit">Create Newsletter</button>
            </form>
        </div>

        <div id="my-newsletters" class="main-content" style="display:none;">
            <h2>My Newsletters</h2>
            <div id="user-newsletters">
                <!-- User's newsletters will be dynamically added here -->
            </div>
            <h3>Create a New Post</h3>
            <form id="post-form">
                <select id="newsletter-select">
                    <!-- Newsletter options will be dynamically added here -->
                </select>
                <input type="text" id="post-title" placeholder="Post Title" required>
                <div id="editor"></div>
                <button type="submit">Publish Post</button>
            </form>
            <h3>Send Newsletter Email</h3>
            <form id="email-form">
                <select id="email-newsletter-select">
                    <!-- Newsletter options will be dynamically added here -->
                </select>
                <input type="text" id="email-subject" placeholder="Email Subject" required>
                <div id="email-editor"></div>
                <button type="submit">Send Email</button>
            </form>
        </div>

        <div id="subscriptions" class="main-content" style="display:none;">
            <h2>My Subscriptions</h2>
            <div id="user-subscriptions">
                <!-- User's subscriptions will be dynamically added here -->
            </div>
        </div>

        <div id="login" class="main-content" style="display:none;">
            <h2>Login</h2>
            <form id="login-form">
                <input type="email" id="login-email" placeholder="Email" required>
                <input type="password" id="login-password" placeholder="Password" required>
                <button type="submit">Login</button>
            </form>
            <h2>Register</h2>
            <form id="register-form">
                <input type="email" id="register-email" placeholder="Email" required>
                <input type="password" id="register-password" placeholder="Password" required>
                <button type="submit">Register</button>
            </form>
        </div>
    </div>

    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>
    <script>
        let token = localStorage.getItem('token');
        const API_URL = 'http://localhost:3000';

        function showSection(sectionId) {
            document.querySelectorAll('.main-content').forEach(section => {
                section.style.display = 'none';
            });
            document.getElementById(sectionId).style.display = 'block';
        }

        async function fetchNewsletters() {
            const response = await fetch(`${API_URL}/newsletters`, {
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });
            return await response.json();
        }

        async function displayUserNewsletters() {
            const userNewslettersSection = document.getElementById('user-newsletters');
            userNewslettersSection.innerHTML = '';
            const newsletters = await fetchNewsletters();
            newsletters.forEach(newsletter => {
                const card = document.createElement('div');
                card.classList.add('newsletter-card');
                card.innerHTML = `
                    <h3>${newsletter.name}</h3>
                    <p>${newsletter.description}</p>
                    <p>${newsletter.subscribers.length} subscribers</p>
                    <button onclick="showAnalytics('${newsletter._id}')">View Analytics</button>
                `;
                userNewslettersSection.appendChild(card);
            });

            // Populate newsletter selects
            const newsletterSelects = document.querySelectorAll('#newsletter-select, #email-newsletter-select');
            newsletterSelects.forEach(select => {
                select.innerHTML = '';
                newsletters.forEach(newsletter => {
                    const option = document.createElement('option');
                    option.value = newsletter._id;
                    option.textContent = newsletter.name;
                    select.appendChild(option);
                });
            });
        }

        async function showAnalytics(newsletterId) {
            const response = await fetch(`${API_URL}/analytics/${newsletterId}`, {
                headers: {
                    'Authorization': `Bearer ${token}`
                }
            });
            const analytics = await response.json();
            alert(`Views: ${analytics.views}\nSubscriptions: ${analytics.subscriptions}\nUnsubscriptions: ${analytics.unsubscriptions}`);
        }

        document.getElementById('newsletter-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            const name = document.getElementById('newsletter-name').value;
            const description = document.getElementById('newsletter-description').value;
            const isPaid = document.getElementById('newsletter-paid').checked;
            const price = isPaid ? document.getElementById('newsletter-price').value : 0;

            const response = await fetch(`${API_URL}/newsletters`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify({ name, description, isPaid, price })
            });

            if (response.ok) {
                alert("Newsletter created successfully!");
                this.reset();
                displayUserNewsletters();
            } else {
                alert("Failed to create newsletter");
            }
        });

        document.getElementById('newsletter-paid').addEventListener('change', function() {
            document.getElementById('newsletter-price').style.display = this.checked ? 'block' : 'none';
        });

        const quill = new Quill('#editor', {
            theme: 'snow'
        });

        const emailQuill = new Quill('#email-editor', {
            theme: 'snow'
        });

        document.getElementById('post-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            const newsletterId = document.getElementById('newsletter-select').value;
            const title = document.getElementById('post-title').value;
            const content = quill.root.innerHTML;

            const response = await fetch(`${API_URL}/posts`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify({ newsletterId, title, content })
            });

            if (response.ok) {
                alert("Post published successfully!");
                this.reset();
                quill.setContents([]);
            } else {
                alert("Failed to publish post");
            }
        });

        document.getElementById('email-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            const newsletterId = document.getElementById('email-newsletter-select').value;
            const subject = document.getElementById('email-subject').value;
            const content = emailQuill.root.innerHTML;

            const response = await fetch(`${API_URL}/send-newsletter`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify({ newsletterId, subject, content })
            });

            if (response.ok) {
                alert("Newsletter email sent successfully!");
                this.reset();
                emailQuill.setContents([]);
            } else {
                alert("Failed to send newsletter email");
            }
        });

        document.getElementById('login-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            const email = document.getElementById('login-email').value;
            const password = document.getElementById('login-password').value;

            const response = await fetch(`${API_URL}/login`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email, password })
            });

            if (response.ok) {
                const data = await response.json();
                token = data.token;
                localStorage.setItem('token', token);
                alert("Logged in successfully!");
                showSection('home');
                displayUserNewsletters();
            } else {
                alert("Login failed");
            }
        });

        document.getElementById('register-form').addEventListener('submit', async function(e) {
            e.preventDefault();
            const email = document.getElementById('register-email').value;
            const password = document.getElementById('register-password').value;

            const response = await fetch(`${API_URL}/register`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ email, password })
            });

            if (response.ok) {
                alert("Registered successfully! Please log in.");
            } else {
                alert("Registration failed");
            }
        });

        // Initialize the app
        if (token) {
            displayUserNewsletters();
        }
    </script>
</body>
</html>
